<?php
// $Id: mailsave_to_image.module,v 1.4 2007/10/23 22:04:02 stuartgreenfield Exp $

/**
 * This module interacts with mailsave
 * Creation of image nodes and saving of attachments is managed via user access control privileges
 * This is a prototype!
 */


/**
 * Implementation of hook_help().
 */
function mailsave_to_image_help($section) {

  // TODO improve wording of help
  switch ($section) {

    case 'admin/help#mailsave_to_image':
      $output .= '<p>' . t('This module is a plug-in for mailsave. If an incoming email contains a jpeg then the post will be automatically converted to an image node. The first jpeg is used for this - if there is more than one jpeg file then the other files will be attached to the node. If you want to attach multiple images to a node consider using the !inline module.', array( '!inline' => '<a href="http://drupal.org/project/inline">inline</a>')) . '</p>';
      return $output;
  }
}


/**
 * Implementation of hook_perm
 */
function mailsave_to_image_perm() {

  return array(
    'convert to image node',
   );

}


/**
 * Implementation of hook_mailsave().
 * Try to switch node type to image
 */
function mailsave_to_image_mailsave($node, $result, $i, $header, $mailbox) {

  // See if conversion to image is needed
  _mailsave_to_image_attempt_image($node);

  // Return the (possibly updated!) updated node
  return $node;

}


/**
 * Attempt to find a jpeg and convert this node to image type, if image module is available
 * Supply an array of attachments attached to the node, and look for the first jpeg
 * If found save a temporary copy and if successful create an object containing its parts
 * Change the node type to image, and pass the object to image_validate
 * Although not uploaded from a form image_validate will process this object
 * and generate the derivative images
 * If $node->new_file is not true at the end then validation failed so revert type
 * Unset the jpeg file as it either failed, or we used it, so we don't want to save it as well
 */
function _mailsave_to_image_attempt_image(&$node) {

  // If $node->mailsave_attachments is empty or image not installed just return
  if (!$node->mailsave_attachments || !module_exists('image')) {
    return;
  }

  // If user doesn't have image conversion permissions just return
  if (!(user_access('convert to image node') && user_access('create images'))) {
    return;
  }

  // Begin processing attachments
  foreach ($node->mailsave_attachments as $key => $jpeg) {

    // Use filemime to detect the first jpeg
    if ($jpeg['filemime'] == 'image/jpeg') {

      // Create an object for passing to image.module via image_prepare
      $file = new StdClass();
      $file->filename = $jpeg['filename'];
      $file->filemime = $jpeg['filemime'];
      $file->filepath = $jpeg['filepath'];
      $file->filesize = $jpeg['filesize'];
      $file->error = 0;
      $file->source = 'mailsave';

      // Store the current node type, and change to image node type
      $original_type = $node->type;
      $node->type = 'image';

      // Generate thumbnails from the attached file by validating
      image_prepare($node, $file);

      // If $node->new_file is not true then validation failed so revert type
      if (!$node->new_file) {
        watchdog('error', t('Mailhandler attached file %file was not a jpeg', array('%file' => $file->filename)));
        $node->type = $original_type;
      }

      // And we don't want to process more jpegs, nor attach this one
      unset($node->mailsave_attachments[$key]);
      break;
    }
  }
}
